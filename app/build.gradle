buildscript {
    repositories {
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
}

apply plugin: 'build-announcements'
apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.squareup.sqldelight'

def gitVersion() {
    return "git rev-list HEAD --first-parent --count".execute([], project.rootDir).text.toInteger()
}

def gitTag() {
    return "git describe --tags --abbrev=0".execute([], project.rootDir).text.trim()
}

retrolambda {
    javaVersion JavaVersion.VERSION_1_7
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "io.romain.passport"
        minSdkVersion 21
        targetSdkVersion 23

        versionCode gitVersion()
        versionName gitTag()

        buildConfigField "String", "GCM_SENDER_ID", "\"${gcm_sender_id}\""

        archivesBaseName = "passport"
    }

    File keystore = rootProject.file('keys/passport.keys')
    boolean hasCustomConfig = keystore.exists();
    if (hasCustomConfig) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(keystore))
        signingConfigs {

            release {
                storeFile rootProject.file("keys/passport.jks")
                storePassword properties['RELEASE_STORE_PASSWORD']
                keyAlias properties['RELEASE_KEY_ALIAS']
                keyPassword properties['RELEASE_KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        debug {

        }

        release {
            if (hasCustomConfig) {
                signingConfig signingConfigs.release
            }

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// Don't Zopflifying
if (System.getenv('TRAVIS') == null) {
    //add zopfli to variants with release build type
    android.applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.each { output ->
                output.assemble.doLast {
                    println "Zopflifying... it might take a while"
                    exec {
                        commandLine output.zipAlign.zipAlignExe, '-f', '-z', '4', output.outputFile.absolutePath, output.outputFile.absolutePath.replaceAll('\\.apk$', '-zopfli.apk')
                    }
                }
            }
        }
    }
}


ext {
    support = '23.3.0'
    play_services = '8.4.0'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-v4:${support}"
    compile "com.android.support:design:${support}"
    compile "com.android.support:appcompat-v7:${support}"
    compile "com.android.support:cardview-v7:${support}"
    compile "com.android.support:recyclerview-v7:${support}"
    compile "com.android.support:palette-v7:${support}"

    compile "com.google.android.gms:play-services-gcm:${play_services}"
    compile "com.google.android.gms:play-services-location:${play_services}"

    // Dagger
    compile 'com.google.dagger:dagger:2.0.2'
    apt 'com.google.dagger:dagger-compiler:2.0.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    // Butterknife
//    compile 'com.jakewharton:butterknife-annotations:8.+'
    compile 'com.jakewharton:butterknife:7.0.1'
//    apt 'com.jakewharton:butterknife-compiler:8.+'

    // GSON
    compile 'com.google.code.gson:gson:2.6.2'

    // OkHttp
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'

    // RxJava
    compile('io.reactivex:rxandroid:+') {
        exclude module: 'rxjava'
    }
    compile 'io.reactivex:rxjava:1.1.1'

    // Retrofit (keep + since it's in beta)
    compile('com.squareup.retrofit2:retrofit:2.+') {
        exclude module: 'okhttp'
    }
    compile('com.squareup.retrofit2:converter-gson:2.+')
    compile('com.squareup.retrofit2:adapter-rxjava:2.+')

    // Glide
    compile 'com.github.bumptech.glide:glide:3.7.0'

    // Setho
    debugCompile 'com.facebook.stetho:stetho:1.3.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.3.1'

    // Auto-Value
//    provided "com.google.auto.value:auto-value:1.2"
    provided 'com.jakewharton.auto.value:auto-value-annotations:1.2-update1'
    apt "com.google.auto.value:auto-value:1.2"
    apt "com.ryanharter.auto.value:auto-value-parcel:0.2.1"
    apt "com.ryanharter.auto.value:auto-value-gson:0.2.5"
    compile 'com.google.android.gms:play-services-appindexing:8.4.0'
}
