/*
 * Copyright 2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.google.gms:google-services:3.0.0"
    }
}

//apply plugin: 'build-announcements'
apply plugin: 'com.android.application'
apply plugin: 'com.squareup.sqldelight'

def gitVersion() {
    return "git rev-list HEAD --first-parent --count".execute([], project.rootDir).text.toInteger()
}

def gitTag() {
    return "git describe --tags --abbrev=0".execute([], project.rootDir).text.trim()
}

def isTravisBuild() {
    return System.getenv('TRAVIS') != null || hasProperty('TRAVIS');
}

def getApkName() {
    return "Passport-" + (isTravisBuild() ? "${gitTag()}" : "DEV")
}

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.1'

    dexOptions {
        javaMaxHeapSize "4096M"
    }

    defaultConfig {
        applicationId "io.romain.passport"
        minSdkVersion 21
        targetSdkVersion 24

        jackOptions {
            enabled true
        }

        versionCode gitVersion()
        versionName gitTag()
        buildConfigField "String", "GCM_SENDER_ID", "\"${gcm_sender_id}\""
        archivesBaseName = getApkName()
        multiDexEnabled true
        testInstrumentationRunner 'io.romain.passport.MultiDexAndroidJUnitRunner'
    }

    File keystore = rootProject.file('keys/passport.keys')
    boolean hasCustomConfig = keystore.exists();
    if (hasCustomConfig) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(keystore))
        signingConfigs {

            release {
                storeFile rootProject.file("keys/passport.jks")
                storePassword properties['RELEASE_STORE_PASSWORD']
                keyAlias properties['RELEASE_KEY_ALIAS']
                keyPassword properties['RELEASE_KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        debug {

        }

        release {
            if (hasCustomConfig) {
                signingConfig signingConfigs.release
            }

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/maven/com.google.dagger/dagger/pom.properties'
        exclude 'META-INF/maven/com.google.dagger/dagger/pom.xml'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
    }
}


ext {
    support = '24.1.1'
    play_services = '9.2.1'

    // HTTP
    okhttp = '3.4.1'
    retrofit = '2.1.0'
    glide = '3.7.0'

    // DEPS INJECTION
    dagger = '2.6'

    // FIXME : Wait for Butterknife to be update for Jack
    butterknife = '8.1.0'

    // DEBUG
    stetho = '1.3.1'
}

dependencies {
    compile 'com.android.support:multidex:1.0.1'
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // SUPPORT
    compile "com.android.support:support-annotations:${support}"
    compile "com.android.support:support-v4:${support}"
    compile "com.android.support:design:${support}"
    compile "com.android.support:appcompat-v7:${support}"
    compile "com.android.support:cardview-v7:${support}"
    compile "com.android.support:recyclerview-v7:${support}"
    compile "com.android.support:palette-v7:${support}"

    // GMS
    compile "com.google.android.gms:play-services-location:${play_services}"
    compile "com.google.android.gms:play-services-places:${play_services}"
    compile "com.google.android.gms:play-services-maps:${play_services}"
    compile "com.google.android.gms:play-services-auth:${play_services}"

    // FIREBASE
    compile "com.google.firebase:firebase-auth:${play_services}"
    compile "com.google.firebase:firebase-storage:${play_services}"


    // GSON
    compile 'com.google.code.gson:gson:2.6.2'

    // RxJava
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'io.reactivex:rxandroid:1.2.1'

    // OkHttp
    compile "com.squareup.okhttp3:okhttp:${okhttp}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttp}"

    compile "com.squareup.retrofit2:retrofit:${retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofit}"

    // Glide
    compile "com.github.bumptech.glide:glide:${glide}"
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@jar'

    // Dagger
    compile "com.google.dagger:dagger:${dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${dagger}"

    // Butterknife
    compile "com.jakewharton:butterknife:${butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknife}"

    // Auto-Value
    provided 'com.jakewharton.auto.value:auto-value-annotations:1.2'
    annotationProcessor "com.google.auto.value:auto-value:1.2"
    annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:0.2.2"
    annotationProcessor "com.ryanharter.auto.value:auto-value-gson:0.3.1"
    annotationProcessor 'com.squareup.auto.value:auto-value-redacted:1.0.0'

    // ###################### DEBUG
    // Setho
    debugCompile "com.facebook.stetho:stetho:${stetho}"
    debugCompile "com.facebook.stetho:stetho-okhttp3:${stetho}"

    // ##################### TEST
    // Test
    androidTestCompile "com.android.support:support-v4:${support}"
    androidTestCompile "com.android.support:support-annotations:${support}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:2.2.2"
    androidTestCompile "com.android.support.test:runner:0.5"
}

// Add to the bottom of the file
apply plugin: 'com.google.gms.google-services'